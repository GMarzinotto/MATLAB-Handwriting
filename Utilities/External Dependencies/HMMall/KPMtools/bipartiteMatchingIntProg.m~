function [a,ass] = optimalMatchingIntProg(dst)
% OPTIMALMATCHINGINTPROG Use binary integer programming to solve for optimal linear assignment
% function a = optimalMatchingIntProg(dst)
% a(i) = best matching column for row i
% 
% See also optimalMatching, which calls Hungarian algorithm

[p1 p2] = size(dst);
c = dst(:); % vectorize cost matrix

% Constraints - See Marciel & Costeira paper
% row sum
A2 = kron(eye(p1), ones(1,p2));
b2 = ones(p1,1);

% col sum
A3 = kron(ones(1,p1), eye(p2));
b3 = ones(p2,1);

if p1 < p2
  A = A2; b = b2;
elseif p1 > p2
  A = A3; b = b3;
else
  % enforce doubly  stochastic
  A = [A2;A3];
  b = [b2; b3];
end

Aineq = zeros(1, p1*p2);
bineq = 0;
ass = bintprog(c, Aineq, bineq, A, b);
ass = reshape(ass, p1, p2);

a = zeros(1, p1);
for i=1:p1
  ndx = find(ass(i,:)==1);
  if ~isempty(ndx)
    a(i) = ndx;
  end
end

keyboard
